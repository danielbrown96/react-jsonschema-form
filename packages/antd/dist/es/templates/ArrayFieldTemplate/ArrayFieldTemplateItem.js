import React from 'react';
import Button from 'antd/lib/button';
import Col from 'antd/lib/col';
import Row from 'antd/lib/row';
import ArrowDownOutlined from '@ant-design/icons/ArrowDownOutlined';
import ArrowUpOutlined from '@ant-design/icons/ArrowUpOutlined';
import DeleteOutlined from '@ant-design/icons/DeleteOutlined';
var BTN_GRP_STYLE = {
  width: '100%'
};
var BTN_STYLE = {
  width: 'calc(100% / 3)'
};

var ArrayFieldTemplateItem = function ArrayFieldTemplateItem(_ref) {
  var children = _ref.children,
      disabled = _ref.disabled,
      formContext = _ref.formContext,
      hasMoveDown = _ref.hasMoveDown,
      hasMoveUp = _ref.hasMoveUp,
      hasRemove = _ref.hasRemove,
      hasToolbar = _ref.hasToolbar,
      index = _ref.index,
      onDropIndexClick = _ref.onDropIndexClick,
      onReorderClick = _ref.onReorderClick,
      readonly = _ref.readonly;
  var _formContext$rowGutte = formContext.rowGutter,
      rowGutter = _formContext$rowGutte === void 0 ? 24 : _formContext$rowGutte,
      _formContext$toolbarA = formContext.toolbarAlign,
      toolbarAlign = _formContext$toolbarA === void 0 ? 'top' : _formContext$toolbarA;
  return /*#__PURE__*/React.createElement(Row, {
    align: toolbarAlign,
    key: "array-item-".concat(index),
    gutter: rowGutter
  }, /*#__PURE__*/React.createElement(Col, {
    flex: "1"
  }, children), hasToolbar && /*#__PURE__*/React.createElement(Col, {
    flex: "192px"
  }, /*#__PURE__*/React.createElement(Button.Group, {
    style: BTN_GRP_STYLE
  }, (hasMoveUp || hasMoveDown) && /*#__PURE__*/React.createElement(Button, {
    disabled: disabled || readonly || !hasMoveUp,
    icon: /*#__PURE__*/React.createElement(ArrowUpOutlined, null),
    onClick: onReorderClick(index, index - 1),
    style: BTN_STYLE,
    type: "default"
  }), (hasMoveUp || hasMoveDown) && /*#__PURE__*/React.createElement(Button, {
    disabled: disabled || readonly || !hasMoveDown,
    icon: /*#__PURE__*/React.createElement(ArrowDownOutlined, null),
    onClick: onReorderClick(index, index + 1),
    style: BTN_STYLE,
    type: "default"
  }), hasRemove && /*#__PURE__*/React.createElement(Button, {
    danger: true,
    disabled: disabled || readonly,
    icon: /*#__PURE__*/React.createElement(DeleteOutlined, null),
    onClick: onDropIndexClick(index),
    style: BTN_STYLE,
    type: "primary"
  }))));
};

ArrayFieldTemplateItem.defaultProps = {
  formContext: {}
};
export default ArrayFieldTemplateItem;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy90ZW1wbGF0ZXMvQXJyYXlGaWVsZFRlbXBsYXRlL0FycmF5RmllbGRUZW1wbGF0ZUl0ZW0uanMiXSwibmFtZXMiOlsiUmVhY3QiLCJCdXR0b24iLCJDb2wiLCJSb3ciLCJBcnJvd0Rvd25PdXRsaW5lZCIsIkFycm93VXBPdXRsaW5lZCIsIkRlbGV0ZU91dGxpbmVkIiwiQlROX0dSUF9TVFlMRSIsIndpZHRoIiwiQlROX1NUWUxFIiwiQXJyYXlGaWVsZFRlbXBsYXRlSXRlbSIsImNoaWxkcmVuIiwiZGlzYWJsZWQiLCJmb3JtQ29udGV4dCIsImhhc01vdmVEb3duIiwiaGFzTW92ZVVwIiwiaGFzUmVtb3ZlIiwiaGFzVG9vbGJhciIsImluZGV4Iiwib25Ecm9wSW5kZXhDbGljayIsIm9uUmVvcmRlckNsaWNrIiwicmVhZG9ubHkiLCJyb3dHdXR0ZXIiLCJ0b29sYmFyQWxpZ24iLCJkZWZhdWx0UHJvcHMiXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLEtBQVAsTUFBa0IsT0FBbEI7QUFFQSxPQUFPQyxNQUFQLE1BQW1CLGlCQUFuQjtBQUNBLE9BQU9DLEdBQVAsTUFBZ0IsY0FBaEI7QUFDQSxPQUFPQyxHQUFQLE1BQWdCLGNBQWhCO0FBQ0EsT0FBT0MsaUJBQVAsTUFBOEIscUNBQTlCO0FBQ0EsT0FBT0MsZUFBUCxNQUE0QixtQ0FBNUI7QUFDQSxPQUFPQyxjQUFQLE1BQTJCLGtDQUEzQjtBQUVBLElBQU1DLGFBQWEsR0FBRztBQUNwQkMsRUFBQUEsS0FBSyxFQUFFO0FBRGEsQ0FBdEI7QUFJQSxJQUFNQyxTQUFTLEdBQUc7QUFDaEJELEVBQUFBLEtBQUssRUFBRTtBQURTLENBQWxCOztBQUlBLElBQU1FLHNCQUFzQixHQUFHLFNBQXpCQSxzQkFBeUIsT0FZekI7QUFBQSxNQVhKQyxRQVdJLFFBWEpBLFFBV0k7QUFBQSxNQVZKQyxRQVVJLFFBVkpBLFFBVUk7QUFBQSxNQVRKQyxXQVNJLFFBVEpBLFdBU0k7QUFBQSxNQVJKQyxXQVFJLFFBUkpBLFdBUUk7QUFBQSxNQVBKQyxTQU9JLFFBUEpBLFNBT0k7QUFBQSxNQU5KQyxTQU1JLFFBTkpBLFNBTUk7QUFBQSxNQUxKQyxVQUtJLFFBTEpBLFVBS0k7QUFBQSxNQUpKQyxLQUlJLFFBSkpBLEtBSUk7QUFBQSxNQUhKQyxnQkFHSSxRQUhKQSxnQkFHSTtBQUFBLE1BRkpDLGNBRUksUUFGSkEsY0FFSTtBQUFBLE1BREpDLFFBQ0ksUUFESkEsUUFDSTtBQUFBLDhCQUM2Q1IsV0FEN0MsQ0FDSVMsU0FESjtBQUFBLE1BQ0lBLFNBREosc0NBQ2dCLEVBRGhCO0FBQUEsOEJBQzZDVCxXQUQ3QyxDQUNvQlUsWUFEcEI7QUFBQSxNQUNvQkEsWUFEcEIsc0NBQ21DLEtBRG5DO0FBR0osc0JBQ0Usb0JBQUMsR0FBRDtBQUFLLElBQUEsS0FBSyxFQUFFQSxZQUFaO0FBQTBCLElBQUEsR0FBRyx1QkFBZ0JMLEtBQWhCLENBQTdCO0FBQXNELElBQUEsTUFBTSxFQUFFSTtBQUE5RCxrQkFDRSxvQkFBQyxHQUFEO0FBQUssSUFBQSxJQUFJLEVBQUM7QUFBVixLQUFlWCxRQUFmLENBREYsRUFHR00sVUFBVSxpQkFDVCxvQkFBQyxHQUFEO0FBQUssSUFBQSxJQUFJLEVBQUM7QUFBVixrQkFDRSxvQkFBQyxNQUFELENBQVEsS0FBUjtBQUFjLElBQUEsS0FBSyxFQUFFVjtBQUFyQixLQUNHLENBQUNRLFNBQVMsSUFBSUQsV0FBZCxrQkFDQyxvQkFBQyxNQUFEO0FBQ0UsSUFBQSxRQUFRLEVBQUVGLFFBQVEsSUFBSVMsUUFBWixJQUF3QixDQUFDTixTQURyQztBQUVFLElBQUEsSUFBSSxlQUFFLG9CQUFDLGVBQUQsT0FGUjtBQUdFLElBQUEsT0FBTyxFQUFFSyxjQUFjLENBQUNGLEtBQUQsRUFBUUEsS0FBSyxHQUFHLENBQWhCLENBSHpCO0FBSUUsSUFBQSxLQUFLLEVBQUVULFNBSlQ7QUFLRSxJQUFBLElBQUksRUFBQztBQUxQLElBRkosRUFXRyxDQUFDTSxTQUFTLElBQUlELFdBQWQsa0JBQ0Msb0JBQUMsTUFBRDtBQUNFLElBQUEsUUFBUSxFQUFFRixRQUFRLElBQUlTLFFBQVosSUFBd0IsQ0FBQ1AsV0FEckM7QUFFRSxJQUFBLElBQUksZUFBRSxvQkFBQyxpQkFBRCxPQUZSO0FBR0UsSUFBQSxPQUFPLEVBQUVNLGNBQWMsQ0FBQ0YsS0FBRCxFQUFRQSxLQUFLLEdBQUcsQ0FBaEIsQ0FIekI7QUFJRSxJQUFBLEtBQUssRUFBRVQsU0FKVDtBQUtFLElBQUEsSUFBSSxFQUFDO0FBTFAsSUFaSixFQXFCR08sU0FBUyxpQkFDUixvQkFBQyxNQUFEO0FBQ0UsSUFBQSxNQUFNLE1BRFI7QUFFRSxJQUFBLFFBQVEsRUFBRUosUUFBUSxJQUFJUyxRQUZ4QjtBQUdFLElBQUEsSUFBSSxlQUFFLG9CQUFDLGNBQUQsT0FIUjtBQUlFLElBQUEsT0FBTyxFQUFFRixnQkFBZ0IsQ0FBQ0QsS0FBRCxDQUozQjtBQUtFLElBQUEsS0FBSyxFQUFFVCxTQUxUO0FBTUUsSUFBQSxJQUFJLEVBQUM7QUFOUCxJQXRCSixDQURGLENBSkosQ0FERjtBQTBDRCxDQXpERDs7QUEyREFDLHNCQUFzQixDQUFDYyxZQUF2QixHQUFzQztBQUNwQ1gsRUFBQUEsV0FBVyxFQUFFO0FBRHVCLENBQXRDO0FBSUEsZUFBZUgsc0JBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5cclxuaW1wb3J0IEJ1dHRvbiBmcm9tICdhbnRkL2xpYi9idXR0b24nO1xyXG5pbXBvcnQgQ29sIGZyb20gJ2FudGQvbGliL2NvbCc7XHJcbmltcG9ydCBSb3cgZnJvbSAnYW50ZC9saWIvcm93JztcclxuaW1wb3J0IEFycm93RG93bk91dGxpbmVkIGZyb20gJ0BhbnQtZGVzaWduL2ljb25zL0Fycm93RG93bk91dGxpbmVkJztcclxuaW1wb3J0IEFycm93VXBPdXRsaW5lZCBmcm9tICdAYW50LWRlc2lnbi9pY29ucy9BcnJvd1VwT3V0bGluZWQnO1xyXG5pbXBvcnQgRGVsZXRlT3V0bGluZWQgZnJvbSAnQGFudC1kZXNpZ24vaWNvbnMvRGVsZXRlT3V0bGluZWQnO1xyXG5cclxuY29uc3QgQlROX0dSUF9TVFlMRSA9IHtcclxuICB3aWR0aDogJzEwMCUnLFxyXG59O1xyXG5cclxuY29uc3QgQlROX1NUWUxFID0ge1xyXG4gIHdpZHRoOiAnY2FsYygxMDAlIC8gMyknLFxyXG59O1xyXG5cclxuY29uc3QgQXJyYXlGaWVsZFRlbXBsYXRlSXRlbSA9ICh7XHJcbiAgY2hpbGRyZW4sXHJcbiAgZGlzYWJsZWQsXHJcbiAgZm9ybUNvbnRleHQsXHJcbiAgaGFzTW92ZURvd24sXHJcbiAgaGFzTW92ZVVwLFxyXG4gIGhhc1JlbW92ZSxcclxuICBoYXNUb29sYmFyLFxyXG4gIGluZGV4LFxyXG4gIG9uRHJvcEluZGV4Q2xpY2ssXHJcbiAgb25SZW9yZGVyQ2xpY2ssXHJcbiAgcmVhZG9ubHksXHJcbn0pID0+IHtcclxuICBjb25zdCB7IHJvd0d1dHRlciA9IDI0LCB0b29sYmFyQWxpZ24gPSAndG9wJyB9ID0gZm9ybUNvbnRleHQ7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8Um93IGFsaWduPXt0b29sYmFyQWxpZ259IGtleT17YGFycmF5LWl0ZW0tJHtpbmRleH1gfSBndXR0ZXI9e3Jvd0d1dHRlcn0+XHJcbiAgICAgIDxDb2wgZmxleD1cIjFcIj57Y2hpbGRyZW59PC9Db2w+XHJcblxyXG4gICAgICB7aGFzVG9vbGJhciAmJiAoXHJcbiAgICAgICAgPENvbCBmbGV4PVwiMTkycHhcIj5cclxuICAgICAgICAgIDxCdXR0b24uR3JvdXAgc3R5bGU9e0JUTl9HUlBfU1RZTEV9PlxyXG4gICAgICAgICAgICB7KGhhc01vdmVVcCB8fCBoYXNNb3ZlRG93bikgJiYgKFxyXG4gICAgICAgICAgICAgIDxCdXR0b25cclxuICAgICAgICAgICAgICAgIGRpc2FibGVkPXtkaXNhYmxlZCB8fCByZWFkb25seSB8fCAhaGFzTW92ZVVwfVxyXG4gICAgICAgICAgICAgICAgaWNvbj17PEFycm93VXBPdXRsaW5lZCAvPn1cclxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9e29uUmVvcmRlckNsaWNrKGluZGV4LCBpbmRleCAtIDEpfVxyXG4gICAgICAgICAgICAgICAgc3R5bGU9e0JUTl9TVFlMRX1cclxuICAgICAgICAgICAgICAgIHR5cGU9XCJkZWZhdWx0XCJcclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICApfVxyXG5cclxuICAgICAgICAgICAgeyhoYXNNb3ZlVXAgfHwgaGFzTW92ZURvd24pICYmIChcclxuICAgICAgICAgICAgICA8QnV0dG9uXHJcbiAgICAgICAgICAgICAgICBkaXNhYmxlZD17ZGlzYWJsZWQgfHwgcmVhZG9ubHkgfHwgIWhhc01vdmVEb3dufVxyXG4gICAgICAgICAgICAgICAgaWNvbj17PEFycm93RG93bk91dGxpbmVkIC8+fVxyXG4gICAgICAgICAgICAgICAgb25DbGljaz17b25SZW9yZGVyQ2xpY2soaW5kZXgsIGluZGV4ICsgMSl9XHJcbiAgICAgICAgICAgICAgICBzdHlsZT17QlROX1NUWUxFfVxyXG4gICAgICAgICAgICAgICAgdHlwZT1cImRlZmF1bHRcIlxyXG4gICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICl9XHJcblxyXG4gICAgICAgICAgICB7aGFzUmVtb3ZlICYmIChcclxuICAgICAgICAgICAgICA8QnV0dG9uXHJcbiAgICAgICAgICAgICAgICBkYW5nZXJcclxuICAgICAgICAgICAgICAgIGRpc2FibGVkPXtkaXNhYmxlZCB8fCByZWFkb25seX1cclxuICAgICAgICAgICAgICAgIGljb249ezxEZWxldGVPdXRsaW5lZCAvPn1cclxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9e29uRHJvcEluZGV4Q2xpY2soaW5kZXgpfVxyXG4gICAgICAgICAgICAgICAgc3R5bGU9e0JUTl9TVFlMRX1cclxuICAgICAgICAgICAgICAgIHR5cGU9XCJwcmltYXJ5XCJcclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICApfVxyXG4gICAgICAgICAgPC9CdXR0b24uR3JvdXA+XHJcbiAgICAgICAgPC9Db2w+XHJcbiAgICAgICl9XHJcbiAgICA8L1Jvdz5cclxuICApO1xyXG59O1xyXG5cclxuQXJyYXlGaWVsZFRlbXBsYXRlSXRlbS5kZWZhdWx0UHJvcHMgPSB7XHJcbiAgZm9ybUNvbnRleHQ6IHt9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgQXJyYXlGaWVsZFRlbXBsYXRlSXRlbTtcclxuIl19