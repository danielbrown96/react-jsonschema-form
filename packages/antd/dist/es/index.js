function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import { utils, withTheme } from '@rjsf/core';
import DescriptionField from './fields/DescriptionField';
import TitleField from './fields/TitleField';
import FieldTemplate from './templates/FieldTemplate';
import ObjectFieldTemplate from './templates/ObjectFieldTemplate';
import ArrayFieldTemplate from './templates/ArrayFieldTemplate';
import AltDateTimeWidget from './widgets/AltDateTimeWidget';
import AltDateWidget from './widgets/AltDateWidget';
import CheckboxesWidget from './widgets/CheckboxesWidget';
import CheckboxWidget from './widgets/CheckboxWidget';
import ColorWidget from './widgets/ColorWidget';
import DateTimeWidget from './widgets/DateTimeWidget';
import DateWidget from './widgets/DateWidget';
import EmailWidget from './widgets/EmailWidget';
import PasswordWidget from './widgets/PasswordWidget';
import RadioWidget from './widgets/RadioWidget';
import RangeWidget from './widgets/RangeWidget';
import SelectWidget from './widgets/SelectWidget';
import TextareaWidget from './widgets/TextareaWidget';
import TextWidget from './widgets/TextWidget';
import UpDownWidget from './widgets/UpDownWidget';
import URLWidget from './widgets/URLWidget';
import ErrorList from './ErrorList'; // import './index.less';

var getDefaultRegistry = utils.getDefaultRegistry;

var _getDefaultRegistry = getDefaultRegistry(),
    fields = _getDefaultRegistry.fields,
    widgets = _getDefaultRegistry.widgets;

export var Fields = {
  DescriptionField: DescriptionField,
  TitleField: TitleField
};
export var Widgets = {
  AltDateTimeWidget: AltDateTimeWidget,
  AltDateWidget: AltDateWidget,
  CheckboxesWidget: CheckboxesWidget,
  CheckboxWidget: CheckboxWidget,
  ColorWidget: ColorWidget,
  DateTimeWidget: DateTimeWidget,
  DateWidget: DateWidget,
  EmailWidget: EmailWidget,
  PasswordWidget: PasswordWidget,
  RadioWidget: RadioWidget,
  RangeWidget: RangeWidget,
  SelectWidget: SelectWidget,
  TextareaWidget: TextareaWidget,
  TextWidget: TextWidget,
  UpDownWidget: UpDownWidget,
  URLWidget: URLWidget
};
export var Theme = {
  ArrayFieldTemplate: ArrayFieldTemplate,
  fields: _objectSpread(_objectSpread({}, fields), Fields),
  FieldTemplate: FieldTemplate,
  ObjectFieldTemplate: ObjectFieldTemplate,
  widgets: _objectSpread(_objectSpread({}, widgets), Widgets),
  ErrorList: ErrorList
};
export var Form = withTheme(Theme);
export default Form;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJ1dGlscyIsIndpdGhUaGVtZSIsIkRlc2NyaXB0aW9uRmllbGQiLCJUaXRsZUZpZWxkIiwiRmllbGRUZW1wbGF0ZSIsIk9iamVjdEZpZWxkVGVtcGxhdGUiLCJBcnJheUZpZWxkVGVtcGxhdGUiLCJBbHREYXRlVGltZVdpZGdldCIsIkFsdERhdGVXaWRnZXQiLCJDaGVja2JveGVzV2lkZ2V0IiwiQ2hlY2tib3hXaWRnZXQiLCJDb2xvcldpZGdldCIsIkRhdGVUaW1lV2lkZ2V0IiwiRGF0ZVdpZGdldCIsIkVtYWlsV2lkZ2V0IiwiUGFzc3dvcmRXaWRnZXQiLCJSYWRpb1dpZGdldCIsIlJhbmdlV2lkZ2V0IiwiU2VsZWN0V2lkZ2V0IiwiVGV4dGFyZWFXaWRnZXQiLCJUZXh0V2lkZ2V0IiwiVXBEb3duV2lkZ2V0IiwiVVJMV2lkZ2V0IiwiRXJyb3JMaXN0IiwiZ2V0RGVmYXVsdFJlZ2lzdHJ5IiwiZmllbGRzIiwid2lkZ2V0cyIsIkZpZWxkcyIsIldpZGdldHMiLCJUaGVtZSIsIkZvcm0iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLFNBQVNBLEtBQVQsRUFBZ0JDLFNBQWhCLFFBQWlDLFlBQWpDO0FBRUEsT0FBT0MsZ0JBQVAsTUFBNkIsMkJBQTdCO0FBQ0EsT0FBT0MsVUFBUCxNQUF1QixxQkFBdkI7QUFFQSxPQUFPQyxhQUFQLE1BQTBCLDJCQUExQjtBQUNBLE9BQU9DLG1CQUFQLE1BQWdDLGlDQUFoQztBQUNBLE9BQU9DLGtCQUFQLE1BQStCLGdDQUEvQjtBQUVBLE9BQU9DLGlCQUFQLE1BQThCLDZCQUE5QjtBQUNBLE9BQU9DLGFBQVAsTUFBMEIseUJBQTFCO0FBQ0EsT0FBT0MsZ0JBQVAsTUFBNkIsNEJBQTdCO0FBQ0EsT0FBT0MsY0FBUCxNQUEyQiwwQkFBM0I7QUFDQSxPQUFPQyxXQUFQLE1BQXdCLHVCQUF4QjtBQUNBLE9BQU9DLGNBQVAsTUFBMkIsMEJBQTNCO0FBQ0EsT0FBT0MsVUFBUCxNQUF1QixzQkFBdkI7QUFDQSxPQUFPQyxXQUFQLE1BQXdCLHVCQUF4QjtBQUNBLE9BQU9DLGNBQVAsTUFBMkIsMEJBQTNCO0FBQ0EsT0FBT0MsV0FBUCxNQUF3Qix1QkFBeEI7QUFDQSxPQUFPQyxXQUFQLE1BQXdCLHVCQUF4QjtBQUNBLE9BQU9DLFlBQVAsTUFBeUIsd0JBQXpCO0FBQ0EsT0FBT0MsY0FBUCxNQUEyQiwwQkFBM0I7QUFDQSxPQUFPQyxVQUFQLE1BQXVCLHNCQUF2QjtBQUNBLE9BQU9DLFlBQVAsTUFBeUIsd0JBQXpCO0FBQ0EsT0FBT0MsU0FBUCxNQUFzQixxQkFBdEI7QUFFQSxPQUFPQyxTQUFQLE1BQXNCLGFBQXRCLEMsQ0FFQTs7SUFFUUMsa0IsR0FBdUJ4QixLLENBQXZCd0Isa0I7OzBCQUNvQkEsa0JBQWtCLEU7SUFBdENDLE0sdUJBQUFBLE07SUFBUUMsTyx1QkFBQUEsTzs7QUFFaEIsT0FBTyxJQUFNQyxNQUFNLEdBQUc7QUFDcEJ6QixFQUFBQSxnQkFBZ0IsRUFBaEJBLGdCQURvQjtBQUVwQkMsRUFBQUEsVUFBVSxFQUFWQTtBQUZvQixDQUFmO0FBS1AsT0FBTyxJQUFNeUIsT0FBTyxHQUFHO0FBQ3JCckIsRUFBQUEsaUJBQWlCLEVBQWpCQSxpQkFEcUI7QUFFckJDLEVBQUFBLGFBQWEsRUFBYkEsYUFGcUI7QUFHckJDLEVBQUFBLGdCQUFnQixFQUFoQkEsZ0JBSHFCO0FBSXJCQyxFQUFBQSxjQUFjLEVBQWRBLGNBSnFCO0FBS3JCQyxFQUFBQSxXQUFXLEVBQVhBLFdBTHFCO0FBTXJCQyxFQUFBQSxjQUFjLEVBQWRBLGNBTnFCO0FBT3JCQyxFQUFBQSxVQUFVLEVBQVZBLFVBUHFCO0FBUXJCQyxFQUFBQSxXQUFXLEVBQVhBLFdBUnFCO0FBU3JCQyxFQUFBQSxjQUFjLEVBQWRBLGNBVHFCO0FBVXJCQyxFQUFBQSxXQUFXLEVBQVhBLFdBVnFCO0FBV3JCQyxFQUFBQSxXQUFXLEVBQVhBLFdBWHFCO0FBWXJCQyxFQUFBQSxZQUFZLEVBQVpBLFlBWnFCO0FBYXJCQyxFQUFBQSxjQUFjLEVBQWRBLGNBYnFCO0FBY3JCQyxFQUFBQSxVQUFVLEVBQVZBLFVBZHFCO0FBZXJCQyxFQUFBQSxZQUFZLEVBQVpBLFlBZnFCO0FBZ0JyQkMsRUFBQUEsU0FBUyxFQUFUQTtBQWhCcUIsQ0FBaEI7QUFtQlAsT0FBTyxJQUFNTyxLQUFLLEdBQUc7QUFDbkJ2QixFQUFBQSxrQkFBa0IsRUFBbEJBLGtCQURtQjtBQUVuQm1CLEVBQUFBLE1BQU0sa0NBQU9BLE1BQVAsR0FBa0JFLE1BQWxCLENBRmE7QUFHbkJ2QixFQUFBQSxhQUFhLEVBQWJBLGFBSG1CO0FBSW5CQyxFQUFBQSxtQkFBbUIsRUFBbkJBLG1CQUptQjtBQUtuQnFCLEVBQUFBLE9BQU8sa0NBQU9BLE9BQVAsR0FBbUJFLE9BQW5CLENBTFk7QUFNbkJMLEVBQUFBLFNBQVMsRUFBVEE7QUFObUIsQ0FBZDtBQVNQLE9BQU8sSUFBTU8sSUFBSSxHQUFHN0IsU0FBUyxDQUFDNEIsS0FBRCxDQUF0QjtBQUVQLGVBQWVDLElBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1dGlscywgd2l0aFRoZW1lIH0gZnJvbSAnQHJqc2YvY29yZSc7XHJcblxyXG5pbXBvcnQgRGVzY3JpcHRpb25GaWVsZCBmcm9tICcuL2ZpZWxkcy9EZXNjcmlwdGlvbkZpZWxkJztcclxuaW1wb3J0IFRpdGxlRmllbGQgZnJvbSAnLi9maWVsZHMvVGl0bGVGaWVsZCc7XHJcblxyXG5pbXBvcnQgRmllbGRUZW1wbGF0ZSBmcm9tICcuL3RlbXBsYXRlcy9GaWVsZFRlbXBsYXRlJztcclxuaW1wb3J0IE9iamVjdEZpZWxkVGVtcGxhdGUgZnJvbSAnLi90ZW1wbGF0ZXMvT2JqZWN0RmllbGRUZW1wbGF0ZSc7XHJcbmltcG9ydCBBcnJheUZpZWxkVGVtcGxhdGUgZnJvbSAnLi90ZW1wbGF0ZXMvQXJyYXlGaWVsZFRlbXBsYXRlJztcclxuXHJcbmltcG9ydCBBbHREYXRlVGltZVdpZGdldCBmcm9tICcuL3dpZGdldHMvQWx0RGF0ZVRpbWVXaWRnZXQnO1xyXG5pbXBvcnQgQWx0RGF0ZVdpZGdldCBmcm9tICcuL3dpZGdldHMvQWx0RGF0ZVdpZGdldCc7XHJcbmltcG9ydCBDaGVja2JveGVzV2lkZ2V0IGZyb20gJy4vd2lkZ2V0cy9DaGVja2JveGVzV2lkZ2V0JztcclxuaW1wb3J0IENoZWNrYm94V2lkZ2V0IGZyb20gJy4vd2lkZ2V0cy9DaGVja2JveFdpZGdldCc7XHJcbmltcG9ydCBDb2xvcldpZGdldCBmcm9tICcuL3dpZGdldHMvQ29sb3JXaWRnZXQnO1xyXG5pbXBvcnQgRGF0ZVRpbWVXaWRnZXQgZnJvbSAnLi93aWRnZXRzL0RhdGVUaW1lV2lkZ2V0JztcclxuaW1wb3J0IERhdGVXaWRnZXQgZnJvbSAnLi93aWRnZXRzL0RhdGVXaWRnZXQnO1xyXG5pbXBvcnQgRW1haWxXaWRnZXQgZnJvbSAnLi93aWRnZXRzL0VtYWlsV2lkZ2V0JztcclxuaW1wb3J0IFBhc3N3b3JkV2lkZ2V0IGZyb20gJy4vd2lkZ2V0cy9QYXNzd29yZFdpZGdldCc7XHJcbmltcG9ydCBSYWRpb1dpZGdldCBmcm9tICcuL3dpZGdldHMvUmFkaW9XaWRnZXQnO1xyXG5pbXBvcnQgUmFuZ2VXaWRnZXQgZnJvbSAnLi93aWRnZXRzL1JhbmdlV2lkZ2V0JztcclxuaW1wb3J0IFNlbGVjdFdpZGdldCBmcm9tICcuL3dpZGdldHMvU2VsZWN0V2lkZ2V0JztcclxuaW1wb3J0IFRleHRhcmVhV2lkZ2V0IGZyb20gJy4vd2lkZ2V0cy9UZXh0YXJlYVdpZGdldCc7XHJcbmltcG9ydCBUZXh0V2lkZ2V0IGZyb20gJy4vd2lkZ2V0cy9UZXh0V2lkZ2V0JztcclxuaW1wb3J0IFVwRG93bldpZGdldCBmcm9tICcuL3dpZGdldHMvVXBEb3duV2lkZ2V0JztcclxuaW1wb3J0IFVSTFdpZGdldCBmcm9tICcuL3dpZGdldHMvVVJMV2lkZ2V0JztcclxuXHJcbmltcG9ydCBFcnJvckxpc3QgZnJvbSAnLi9FcnJvckxpc3QnO1xyXG5cclxuLy8gaW1wb3J0ICcuL2luZGV4Lmxlc3MnO1xyXG5cclxuY29uc3QgeyBnZXREZWZhdWx0UmVnaXN0cnkgfSA9IHV0aWxzO1xyXG5jb25zdCB7IGZpZWxkcywgd2lkZ2V0cyB9ID0gZ2V0RGVmYXVsdFJlZ2lzdHJ5KCk7XHJcblxyXG5leHBvcnQgY29uc3QgRmllbGRzID0ge1xyXG4gIERlc2NyaXB0aW9uRmllbGQsXHJcbiAgVGl0bGVGaWVsZCxcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBXaWRnZXRzID0ge1xyXG4gIEFsdERhdGVUaW1lV2lkZ2V0LFxyXG4gIEFsdERhdGVXaWRnZXQsXHJcbiAgQ2hlY2tib3hlc1dpZGdldCxcclxuICBDaGVja2JveFdpZGdldCxcclxuICBDb2xvcldpZGdldCxcclxuICBEYXRlVGltZVdpZGdldCxcclxuICBEYXRlV2lkZ2V0LFxyXG4gIEVtYWlsV2lkZ2V0LFxyXG4gIFBhc3N3b3JkV2lkZ2V0LFxyXG4gIFJhZGlvV2lkZ2V0LFxyXG4gIFJhbmdlV2lkZ2V0LFxyXG4gIFNlbGVjdFdpZGdldCxcclxuICBUZXh0YXJlYVdpZGdldCxcclxuICBUZXh0V2lkZ2V0LFxyXG4gIFVwRG93bldpZGdldCxcclxuICBVUkxXaWRnZXQsXHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgVGhlbWUgPSB7XHJcbiAgQXJyYXlGaWVsZFRlbXBsYXRlLFxyXG4gIGZpZWxkczogeyAuLi5maWVsZHMsIC4uLkZpZWxkcyB9LFxyXG4gIEZpZWxkVGVtcGxhdGUsXHJcbiAgT2JqZWN0RmllbGRUZW1wbGF0ZSxcclxuICB3aWRnZXRzOiB7IC4uLndpZGdldHMsIC4uLldpZGdldHMgfSxcclxuICBFcnJvckxpc3QsXHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgRm9ybSA9IHdpdGhUaGVtZShUaGVtZSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBGb3JtO1xyXG4iXX0=